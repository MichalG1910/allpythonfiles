E_Rates - skrypt korzysta z danych api.nbp.pl
Po uruchomieniu skrypt pobiera aktualną tabelę kursów walut z API NBP w formacie JSON, parsuje je i wyświetla w odpowiednich zakładkach interfejsu graficznego (biblioteka Tkinter).
Dodatkowo generuje plik w formacie txt, w którym zapisuje aktualną tabelę kursów. Plik jest zapisaywany lokalizacji skryptu, w katalogu "Reports"(tworzony automatycznie, jeśli nie istnieje)
Dzięki wykorzystaniu biblioteki Matplotlib, możemy w oknie głównym aplikacji w zakładce "Wykres", narysować wykres dowolnej waluty (dostępnej w API NBP) w porównaniu do Złotego
Dodatkowo możemy na ten wykres nałożyć linię trendu oraz min/max wartości na wykresie. Wykres rusujemy w wybranym przedziale czasowym
Wykres ten później możemy zapisać w katalogu "Reports" (w formacie PNG)
W zakładce "Wiele wykresów" możemy generować do 15 wykresów jednocześnie (będą wyświetlone w jednym oknie pełnoekranowym).
Mamy możliwość narysowania w jednym oknie wielu wykresów jednej waluty w różnych przedziałach czasowych (dostępne są 2 widoki do generowania wielu wykresów)
Wiele wykresów też możemy generować z dodatkowymi opcjami i zapisywać w katalogu "Reports"
W zakładce "Wiele Wykresów" po zaznaczeniu odpowiednich opcji możemy wygenerować dowolną liczbę linii (walut) na jednym wykresie. Linie generujemy w tym samym przedziale czasu. Okno otwiera się na pełnym ekranie. Możemy taki wykres zapisać w formacie PNG w katalogu "Reports"
W zakładce "Raport" możemy wygenerować raport w formacie txt i csv, zawierające tabele kursów z ustalonego wcześniej przedziału czasowego.
Raporty można generować od dnia 2004-05-04 (dane o tej daty są dostępne w API NBP)
Generowanie raportu z dużego przedziału czasu lub rysowanie wykresu (lub wykresów) z dużego przedziału czasu może trochę potrwać. Dzieje się tak, ponieważ pojedyncze zapytanie do API NBP nie może obejmować przedziału czasu dłuższego niż 93 dni. Na przykład dla narysowania wykresu z 15 lat skrypt potrzebuje wykonać w pętli 60 zapytań do serwera NBP
Docelowo problem ten zostanie rozwiązany zaimplementowaniem do aplikacji bazy danych (automatycznie aktualizującej się przy starcie aplikacji).
Wszystkie pliki tworzone w aplikacji są automatycznie nazywane i umieszczane w katalogu "Reports" w katalogu głównym skryptu.
